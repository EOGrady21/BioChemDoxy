
> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL07040 FLAG Report:,  2019-03-15 12:42:17
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL08036"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL08036 FLAG Report:,  2019-03-15 12:42:53
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged SILICATE, event IML2008036391, station 391:

 sample_key  depth  value      method qc
              1.69  0.000 SiO4_Alp_SF  2
              7.24  0.460 SiO4_Alp_SF  1
             17.06  0.210 SiO4_Alp_SF  1
             26.97  1.935 SiO4_Alp_SF  1
             52.05  1.700 SiO4_Alp_SF  1
            102.11  7.230 SiO4_Alp_SF  1
            201.30 17.815 SiO4_Alp_SF  1
            245.98 20.570 SiO4_Alp_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML2008036421, station 421:

 sample_key  depth O2_CTD_mLL qc
              2.68   316.3268  0
              7.74   323.1151  0
             17.45   333.2976  0
             27.47   346.7849  0
             52.35   346.0703  0
            102.52   325.9733  0
            196.26   195.4322  0
            299.96   147.3333  0
            319.37   149.2537  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML2008036511, station 511:

 sample_key depth O2_CTD_mLL qc
             0.99   300.2045  0
             5.16   303.6433  0
            15.37   326.5093  0
            25.09   346.6956  0
            50.47   330.7520  0
            75.35   291.9424  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged NITRATE, event IML2008036601, station 601:

 sample_key depth value         method qc
             2.18 0.050 NO2NO3_Tech_SF  7
             5.06 3.115 NO2NO3_Tech_SF  7
            14.68 2.665 NO2NO3_Tech_SF  1
            21.12 3.000 NO2NO3_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML2008036731, station 731:

 sample_key depth O2_CTD_mLL qc
             1.79   286.0026  0
             6.74   313.3346  0
            16.46   313.8258  0
            26.18   326.2413  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML2008036951, station 951:

 sample_key depth O2_CTD_mLL qc
             2.48   306.5016  0
             7.44   306.5462  0
            17.35   338.1655  0
            26.97   342.0063  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL08041"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL08041 FLAG Report:,  2019-03-15 12:43:27
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged OXYGEN, event IML2008041101, station 101:

 sample_key  depth O2_CTD_mLL qc
             11.01   297.2570  0
             15.67   312.8433  0
             50.57   340.2199  0
            214.29   151.7547  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged NITRATE, event IML200804121, station 21:

 sample_key  depth  value         method qc
              2.48  0.145 NO2NO3_Tech_SF  1
             15.67  0.205 NO2NO3_Tech_SF  7
             15.67  0.240 NO2NO3_Tech_SF  7
             50.67  5.755 NO2NO3_Tech_SF  1
            175.95 19.320 NO2NO3_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged PHOSPHATE, event IML200804121, station 21:

 sample_key  depth value      method qc
              2.48  0.03 PO4_Tech_SF  1
             15.67  0.34 PO4_Tech_SF  7
             15.67  0.35 PO4_Tech_SF  7
             50.67  0.85 PO4_Tech_SF  1
            175.95  1.44 PO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML200804141, station 41:

 sample_key  depth O2_CTD_mLL qc
             15.47   342.4082  0
             27.17   367.0159  0
             50.27   351.3849  0
            250.44   157.5158  0
            452.70   168.7701  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML200804191, station 91:

 sample_key  depth O2_CTD_mLL qc
              2.88   252.9096  0
             15.67   285.3774  0
             17.45   301.2764  0
             50.27   349.0179  0
            250.04   156.7566  0
            493.45   168.9934  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL09037"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL09037 FLAG Report:,  2019-03-15 12:43:52
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged PHOSPHATE, event IML2009037391, station 391:

 sample_key  depth value     method qc
              1.78 0.315 PO4_Alp_SF  1
              5.85 0.210 PO4_Alp_SF  1
             15.67 0.300 PO4_Alp_SF  1
             25.98 0.300 PO4_Alp_SF  1
             49.77 0.535 PO4_Alp_SF  1
            101.52 0.650 PO4_Alp_SF  2
            197.54 1.005 PO4_Alp_SF  1
            243.01 1.050 PO4_Alp_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged SILICATE, event IML2009037391, station 391:

 sample_key  depth  value       method qc
              1.78  0.000 SiO4_Tech_SF  2
              5.85  0.000 SiO4_Tech_SF  2
             15.67  0.000 SiO4_Tech_SF  1
             25.98  0.000 SiO4_Tech_SF  1
             49.77  1.500 SiO4_Tech_SF  1
            101.52  3.365 SiO4_Tech_SF  1
            197.54  9.525 SiO4_Tech_SF  1
            243.01 10.665 SiO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL09051"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL09051 FLAG Report:,  2019-03-15 12:44:07
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged OXYGEN, event IML2009051101, station 101:

 sample_key  depth O2_CTD_mLL qc
              1.49   267.9153  0
             14.68   268.9872  0
             25.09   307.4841  0
             50.67   344.1500  0
            250.43   175.6478  0
            500.46   174.3973  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML200905111, station 11:

 sample_key depth O2_CTD_mLL qc
             2.18   273.5425  0
            12.40   274.8823  0
            16.36   273.0512  0
            48.59   305.1171  0
            79.32   307.3501  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML200905161, station 61:

 sample_key  depth O2_CTD_mLL qc
              1.59   267.6027  0
             15.67   290.1114  0
             24.69   346.5616  0
             50.27   311.3695  0
            247.17   158.2304  0
            451.90   169.9760  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL10037"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL10037 FLAG Report:,  2019-03-15 12:44:36
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged NITRATE, event IML2010037411, station 411:

 sample_key  depth    value         method qc
              1.88  0.04000 NO2NO3_Tech_SF  1
              5.26  0.11000 NO2NO3_Tech_SF  1
             15.27  0.11000 NO2NO3_Tech_SF  1
             25.88  0.52333 NO2NO3_Tech_SF  1
             50.17  4.04500 NO2NO3_Tech_SF  1
            100.04 11.66500 NO2NO3_Tech_SF  2
            199.43 20.62500 NO2NO3_Tech_SF  1
            301.84 22.73667 NO2NO3_Tech_SF  1
            401.04 23.05000 NO2NO3_Tech_SF  1
            454.77 21.30333 NO2NO3_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML2010037541, station 541:

 sample_key depth O2_CTD_mLL qc
             1.19   327.8044  0
             5.16   329.6355  0
            15.27   327.3578  0
            25.68   328.2510  0
            37.48   333.8782  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL10052"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL10052 FLAG Report:,  2019-03-15 12:44:56
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged SILICATE, event IML2010052831, station 831:

 sample_key  depth    value       method qc
              8.33  0.73667 SiO4_Tech_SF  1
             17.65  0.94000 SiO4_Tech_SF  1
             53.44  1.37500 SiO4_Tech_SF  2
            251.82 18.20500 SiO4_Tech_SF  1
            509.66 16.55000 SiO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL11032"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL11032 FLAG Report:,  2019-03-15 12:45:20
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged NITRATE, event IML2011032951, station 951:

 sample_key depth value         method qc
             2.08 0.080 NO2NO3_Tech_SF  1
             6.15 0.060 NO2NO3_Tech_SF  1
            15.67 0.040 NO2NO3_Tech_SF  1
            25.39 0.100 NO2NO3_Tech_SF  7
            25.39 0.085 NO2NO3_Tech_SF  7


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged PHOSPHATE, event IML2011032951, station 951:

 sample_key depth   value      method qc
             2.08 0.22000 PO4_Tech_SF  1
             6.15 0.20667 PO4_Tech_SF  1
            15.67 0.23500 PO4_Tech_SF  1
            25.39 0.32000 PO4_Tech_SF  7
            25.39 0.33000 PO4_Tech_SF  7


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL11050"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL11050 FLAG Report:,  2019-03-15 12:45:36
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL12001"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL12001 FLAG Report:,  2019-03-15 12:46:05
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged NITRATE, event IML2012012401, station 401:

 sample_key  depth  value         method qc
              1.78  0.035 NO2NO3_Tech_SF  1
              5.75  0.035 NO2NO3_Tech_SF  1
             25.68  0.100 NO2NO3_Tech_SF  1
             50.47  1.820 NO2NO3_Tech_SF  1
             98.55 11.370 NO2NO3_Tech_SF  2
            198.83 17.555 NO2NO3_Tech_SF  1
            246.67 20.065 NO2NO3_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML2012012421, station 421:

 sample_key  depth O2_CTD_mLL qc
              2.68   315.6569  0
              5.85   315.7909  0
             15.67   317.0413  0
             25.98   340.4878  0
             50.97   333.0296  0
            100.63   279.0357  0
            201.81   167.1624  0
            298.57   137.9994  0
            396.98   177.3449  0
            456.46   189.5370  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML2012012521, station 521:

 sample_key depth O2_CTD_mLL qc
             1.39   315.4336  0
             5.85   313.9598  0
            15.37   323.2044  0
            25.29   338.1655  0
            50.27   319.9889  0
            74.96   270.8182  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML2012012571, station 571:

 sample_key depth O2_CTD_mLL qc
             1.29   313.7812  0
             5.85   315.4782  0
            15.07   333.4316  0
            25.28   333.8782  0
            49.97   285.6007  0
            65.73   262.3328  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL12002"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL12002 FLAG Report:,  2019-03-15 12:46:32
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged PHOSPHATE, event IML20120271051, station 1051:

 sample_key  depth value      method qc
              5.06 0.050 PO4_Tech_SF  2
             14.97 0.275 PO4_Tech_SF  1
             40.06 0.675 PO4_Tech_SF  1
             50.17 0.795 PO4_Tech_SF  1
            249.84 1.640 PO4_Tech_SF  1
            516.00 1.615 PO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged SILICATE, event IML20120271051, station 1051:

 sample_key  depth  value       method qc
              5.06  0.915 SiO4_Tech_SF  1
             14.97  0.705 SiO4_Tech_SF  1
             40.06  0.700 SiO4_Tech_SF  2
             50.17  3.365 SiO4_Tech_SF  1
            249.84 21.145 SiO4_Tech_SF  1
            516.00 26.760 SiO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL13019"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL13019 FLAG Report:,  2019-03-15 12:46:49
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 

> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL13030"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL13030 FLAG Report:,  2019-03-15 12:47:10
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged PHOSPHATE, event IML2013030651, station 651:

 sample_key  depth   value      method qc
              1.29 0.04667 PO4_Tech_SF  2
              7.64 0.03500 PO4_Tech_SF  2
             14.18 0.18500 PO4_Tech_SF  1
             50.57 0.55500 PO4_Tech_SF  1
            515.30 1.68000 PO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged SILICATE, event IML2013030651, station 651:

 sample_key  depth  value       method qc
              1.29  0.560 SiO4_Tech_SF  1
              7.64  0.545 SiO4_Tech_SF  1
             14.18  0.740 SiO4_Tech_SF  1
             50.57  0.875 SiO4_Tech_SF  2
            515.30 32.370 SiO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL13118"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL13118 FLAG Report:,  2019-03-15 13:07:32
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged OXYGEN, event IMLTEL2013118211, station 211:

 sample_key depth O2_CTD_mLL qc
             6.05   253.9814  0
            25.98   327.4918  0
            64.45   257.9115  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged NITRATE, event IMLTEL2013118291, station 291:

 sample_key depth value        method qc
             5.16 0.000 NO2NO3_Tech_F  1
            24.69 0.000 NO2NO3_Tech_F  7
            27.57 2.975 NO2NO3_Tech_F  7


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IMLTEL2013118351, station 351:

 sample_key depth O2_CTD_mLL qc
             4.86    236.966  0
            13.98    236.698  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IMLTEL2013118411, station 411:

 sample_key depth O2_CTD_mLL qc
             5.75   258.3581  0
            25.59   242.9951  0
            40.66   287.1638  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL14021"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL14021 FLAG Report:,  2019-03-15 13:08:33
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged SILICATE, event IML20140211011, station 1011:

 sample_key  depth  value       method qc
              1.88  0.365 SiO4_Tech_SF  1
             15.37  0.825 SiO4_Tech_SF  1
             31.23  0.595 SiO4_Tech_SF  2
             50.47  1.640 SiO4_Tech_SF  1
            519.75 32.810 SiO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged PHOSPHATE, event IML20140211041, station 1041:

 sample_key  depth value      method qc
              2.48 0.060 PO4_Tech_SF  2
             15.57 0.080 PO4_Tech_SF  2
             18.05 0.120 PO4_Tech_SF  2
             50.37 0.630 PO4_Tech_SF  1
            243.30 1.435 PO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged PHOSPHATE, event IML20140211061, station 1061:

 sample_key  depth value      method qc
              1.78 0.030 PO4_Tech_SF  2
             14.78 0.140 PO4_Tech_SF  1
             21.22 0.205 PO4_Tech_SF  1
             49.48 0.615 PO4_Tech_SF  1
            462.88 1.615 PO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged SILICATE, event IML20140211061, station 1061:

 sample_key  depth  value       method qc
              1.78  0.325 SiO4_Tech_SF  1
             14.78  0.400 SiO4_Tech_SF  1
             21.22  0.465 SiO4_Tech_SF  1
             49.48  1.700 SiO4_Tech_SF  1
            462.88 33.200 SiO4_Tech_SF  2


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged PHOSPHATE, event IML20140211071, station 1071:

 sample_key  depth value      method qc
              1.88 0.065 PO4_Tech_SF  2
             15.27 0.160 PO4_Tech_SF  1
             34.41 0.360 PO4_Tech_SF  1
             51.16 0.680 PO4_Tech_SF  1
            458.63 1.665 PO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged SILICATE, event IML20140211071, station 1071:

 sample_key  depth  value       method qc
              1.88  0.410 SiO4_Tech_SF  1
             15.27  0.305 SiO4_Tech_SF  1
             34.41  0.230 SiO4_Tech_SF  2
             51.16  1.920 SiO4_Tech_SF  1
            458.63 35.025 SiO4_Tech_SF  2


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged NITRATE, event IML20140211081, station 1081:

 sample_key  depth  value         method qc
              1.98  0.000 NO2NO3_Tech_SF  1
             15.07  0.915 NO2NO3_Tech_SF  1
             35.90  0.955 NO2NO3_Tech_SF  1
             50.57  2.350 NO2NO3_Tech_SF  1
            316.70 22.600 NO2NO3_Tech_SF  2


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged SILICATE, event IML20140211081, station 1081:

 sample_key  depth  value       method qc
              1.98  0.695 SiO4_Tech_SF  1
             15.07  1.990 SiO4_Tech_SF  1
             35.90  0.515 SiO4_Tech_SF  2
             50.57  1.505 SiO4_Tech_SF  1
            316.70 26.795 SiO4_Tech_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL14133"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL14133 FLAG Report:,  2019-03-15 13:09:09
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged NITRATE, event IMLTEL20141331061, station 1061:

 sample_key depth value        method qc
             5.55     0 NO2NO3_Tech_F  7
            26.67     0 NO2NO3_Tech_F  7


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged NITRATE, event IMLTEL20141331131, station 1131:

 sample_key depth value        method qc
             5.36     0 NO2NO3_Tech_F  7
            23.50     0 NO2NO3_Tech_F  7


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



