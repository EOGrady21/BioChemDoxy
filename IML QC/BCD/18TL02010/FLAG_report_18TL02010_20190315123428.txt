
> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL02010 FLAG Report:,  2019-03-15 12:34:28
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL03004"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL03004 FLAG Report:,  2019-03-15 12:34:58
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged SILICATE, event 49, station FC-07:

           sample_key depth value method qc
 18TL03004_283_256343     4  2.17 SiO4_0  1
 18TL03004_283_256342    10  1.89 SiO4_0  1
 18TL03004_283_256341    20  2.08 SiO4_0  3
 18TL03004_283_256340    30  2.29 SiO4_0  1
 18TL03004_283_256339    39  2.15 SiO4_0  1
 18TL03004_283_256338    49  1.61 SiO4_0  1
 18TL03004_283_256337    74  6.11 SiO4_0  1
 18TL03004_283_256336   100  8.39 SiO4_0  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged PHOSPHATE, event 52, station FC-04:

           sample_key depth value method qc
 18TL03004_296_256362     5  0.74  PO4_0  1
 18TL03004_296_256361    10  0.57  PO4_0  1
 18TL03004_296_256360    20  0.63  PO4_0  1
 18TL03004_296_256359    31  1.26  PO4_0  1
 18TL03004_296_256358    41  0.68  PO4_0  1
 18TL03004_296_256357    50  0.64  PO4_0  3
 18TL03004_296_256356    75  0.66  PO4_0  1
 18TL03004_296_256355   100  0.74  PO4_0  1
 18TL03004_296_256354   119  0.93  PO4_0  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged SILICATE, event 52, station FC-04:

           sample_key depth value method qc
 18TL03004_296_256362     5  2.63 SiO4_0  1
 18TL03004_296_256361    10  1.73 SiO4_0  1
 18TL03004_296_256360    20  1.63 SiO4_0  1
 18TL03004_296_256359    31  6.77 SiO4_0  4
 18TL03004_296_256358    41  1.06 SiO4_0  1
 18TL03004_296_256357    50  1.76 SiO4_0  1
 18TL03004_296_256356    75  1.58 SiO4_0  1
 18TL03004_296_256355   100  2.88 SiO4_0  1
 18TL03004_296_256354   119  8.16 SiO4_0  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL04021"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL04021 FLAG Report:,  2019-03-15 12:35:25
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged OXYGEN, event IML2004021361, station 361:

 sample_key  depth O2_CTD_mLL qc
              1.59   308.3773  0
              4.86   310.5656  0
             14.18   317.1307  0
             24.19   324.8122  0
             52.95   313.9598  0
             98.65   300.2492  0
            198.63   202.8457  0
            250.44   160.8207  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged NITRATE, event IML2004021401, station 401:

 sample_key  depth  value        method qc
              4.66  0.555 NO2NO3_Alp_SF  1
             14.38  0.175 NO2NO3_Alp_SF  1
             25.29  0.295 NO2NO3_Alp_SF  2
             51.17  0.925 NO2NO3_Alp_SF  1
            100.63  4.460 NO2NO3_Alp_SF  1
            175.16 15.985 NO2NO3_Alp_SF  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL04033"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL04033 FLAG Report:,  2019-03-15 12:35:58
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL04524"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL04524 FLAG Report:,  2019-03-15 12:36:35
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL05035"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL05035 FLAG Report:,  2019-03-15 12:37:05
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged OXYGEN, event IML2005035591, station 591:

 sample_key depth O2_CTD_mLL qc
             1.79   313.9151  0
             5.45   313.6918  0
            15.67   331.3325  0
            25.68   333.6549  0
            50.47   324.4549  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL05045"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL05045 FLAG Report:,  2019-03-15 12:37:28
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged OXYGEN, event IML2005045231, station 231:

 sample_key  depth O2_CTD_mLL qc
              1.09   267.6920  0
            249.74   168.8148  0
            423.08   202.3545  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)



-> Flagged OXYGEN, event IML2005045371, station 371:

 sample_key  depth O2_CTD_mLL qc
              2.48   268.9425  0
            249.54   170.5119  0
            495.02   203.0690  0


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> sink()

> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL05601"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)

> cat("\n")


> cat(paste(mission,"FLAG Report:, ", n))
18TL05601 FLAG Report:,  2019-03-15 12:37:50
> cat("\n")


> cat(c("-----------------------","\n","\n"))
----------------------- 
 

> # ========================= #
> # PLOT DATA FOR EACH EVENT
> # ========================= #
> 
> 
> for (i in 1:length(fe)) {
+   
+   event=sprintf( .... [TRUNCATED] 
-> Flagged PHOSPHATE, event 53, station STN27:

           sample_key depth value method qc
 18TL05601_297_259898     4  0.31  PO4_0  1
 18TL05601_297_259897    10  0.52  PO4_0  1
 18TL05601_297_259896    20  0.28  PO4_0  1
 18TL05601_297_259895    30  0.31  PO4_0  1
 18TL05601_297_259894    40  0.27  PO4_0  2
 18TL05601_297_259893    49  0.26  PO4_0  2
 18TL05601_297_259892    75  0.46  PO4_0  1
 18TL05601_297_259891    99  0.72  PO4_0  1
 18TL05601_297_259890   149  1.16  PO4_0  1
 18TL05601_297_259889   172  1.30  PO4_0  1


-> QC repot:
[1] Filename    Pressure    Uniqueno    Variable    Values      Test.failed
<0 rows> (or 0-length row.names)




> # plot flagged profiles using BC flagged file
> #original file from Gordana Lazin
> #updated by E Chisholm, March 2019
> 
> 
> source("flagcol2.r")

> require(lubridate)

> source("plot_profiles.r")

> wd="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC"

> # load flagged BCD file
> mission="18TL06043"

> fn=file.path(paste0(wd,'/BCD/',mission, '/',mission,"_BCD_flagged.csv"))

> df0=data.frame(read.csv(fn,  header = F, quote = '', fill = T, stringsAsFactors = F))

> names(df0) <- df0[1,]

> df0 <- df0[-1,1:25]

> df0$DIS_HEADER_START_DEPTH <- as.numeric(df0$DIS_HEADER_START_DEPTH)

> df0$DIS_DETAIL_DATA_VAL <- as.numeric(df0$DIS_DETAIL_DATA_VAL)

> # load QC report files 
> qc_folder="C:/Users/ChisholmE/Documents/BIOCHEM/IML QC/QC_V6"

> qcf=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format.txt")

> qcf_ctd=paste0("QC_data_",substr(mission,nchar(mission)-4,nchar(mission)),"_IML_format_ctd.txt")

> qcrep=read.table(file.path(qc_folder,qcf), stringsAsFactors=F, sep=";", header=T)

> #no ctd data
> #qcrep_ctd=read.table(file.path(qc_folder,qcf_ctd), stringsAsFactors=F, sep=";", header=T)
> 
> # if (mission %in% c("HUD99054","HUD9 ..." ... [TRUNCATED] 

> qcpar <-  vars$BCD_FIELDS[vars$qc == 'qc']

> #qcpar=c("Temp_CTD_1968","Salinity_CTD","O2_CTD_mLL","Salinity_Sal_PSS","Chl_a_Holm-Hansen_F","pH_CTD",
>         #"Chl_Fluor_Voltage", "O2_Electrod ..." ... [TRUNCATED] 

> # find events for which the dat was flagged
> 
> # 1. find indices of flagged data, fi
> fi=which(df$DIS_DETAIL_DATA_QC_CODE>1)

> # 2. Find flagged events, fe
> fe=unique(df$EVENT_COLLECTOR_EVENT_ID[fi])

> # order flagged events by event number
> fe=fe[order(fe)]

> # =================== #
> # DEFINE REPORT FILE
> # =================== #
> outpath=file.path(paste0(wd,'/BCD/',mission))

> n=now() # make time stamp to mark the start of processing

> timestamp=paste0(year(n), sprintf("%02d",month(n)),sprintf("%02d",day(n)),
+                  sprintf("%02d",hour(n)),sprintf("%02d",minute(n)),spri .... [TRUNCATED] 

> # name of the report file                 
> report_file=paste0("FLAG_report_",mission,"_",timestamp, ".txt")

> report_file=file.path(outpath,report_file)

> # write input files into report
> sink(file=report_file,append=TRUE, split=TRUE)
